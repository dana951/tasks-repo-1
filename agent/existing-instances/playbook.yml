---
- name: Install agent and setup node_exporter custom metric
  hosts: localhost
  become: yes
  vars:
    metric_dir: /var/lib/node_exporter/textfile_collector
    metric_file: "{{ metric_dir }}/agent-custome-metric.prom"
    agent_installer: agent-installer.sh
    node_exporter_service: /etc/systemd/system/node_exporter.service

  tasks:
    - name: Get IMDSv2 token
      shell: |
        curl -sX PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 60"
      register: imds_token

    - name: Get AWS account ID (IMDSv2)
      shell: |
        curl -s -H "X-aws-ec2-metadata-token: {{ imds_token.stdout }}" http://169.254.169.254/latest/dynamic/instance-identity/document | grep accountId | awk -F\" '{print $4}'
      register: account_id

    - name: Set S3 bucket name
      set_fact:
        s3_bucket: "devops-file-{{ account_id.stdout }}"

    - name: Download agent installer from S3
      aws_s3:
        bucket: "{{ s3_bucket }}"
        object: "agent-files/agent-installer.sh"
        dest: "/tmp/{{ agent_installer }}"
        mode: get

    - name: Make agent installer executable
      file:
        path: "/tmp/{{ agent_installer }}"
        mode: '0755'

    - name: Install the agent
      shell: "/tmp/{{ agent_installer }}"
      args:
        creates: /usr/local/bin/agent  # adjust if agent binary path is different

    - name: Ensure metric directory exists
      file:
        path: "{{ metric_dir }}"
        state: directory
        owner: node_exporter
        group: node_exporter
        mode: '0755'

    - name: Create cron job for agent last check-in metric
      cron:
        name: "Agent last check-in metric"
        user: root
        job: |
          now=$(date +%s)
          last=$(agent --last-checkin | xargs -I{} date -d "{}" +%s)
          diff=$(( (now - last) / 60 ))
          echo "agent-last-checkin $diff" > {{ metric_file }}

    - name: Ensure node_exporter service uses textfile collector
      lineinfile:
        path: "{{ node_exporter_service }}"
        regexp: '^ExecStart='
        line: 'ExecStart=/usr/local/bin/node_exporter --collector.textfile.directory={{ metric_dir }}'
        backup: yes

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Restart node_exporter
      systemd:
        name: node_exporter
        state: restarted